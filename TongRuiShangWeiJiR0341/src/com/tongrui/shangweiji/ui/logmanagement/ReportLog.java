/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ReportLog.java
 *
 * Created on 2012-10-4, 9:17:21
 */
package com.tongrui.shangweiji.ui.logmanagement;

import com.tongrui.shangweiji.biz.ServiceLocator;
import com.tongrui.shangweiji.biz.SystemLogService;
import com.tongrui.shangweiji.data.CatSystemLog;
import common.CommonMethod;
import java.awt.Cursor;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class ReportLog extends javax.swing.JFrame {

    private static ReportLog reportLog = null;
    public static ReportLog getInstatnce() {
        if(reportLog == null) {
            try {
                reportLog = new ReportLog();
            } catch (Throwable ex) {
                Logger.getLogger(ReportLog.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "本地数据库访问出错,请重试!");
            }
        }
        return reportLog;
    }
    
    private List<CatSystemLog> logList;
    
    /** Creates new form ReportLog */
    public ReportLog() throws Throwable {
        initComponents();
        this.setLocationRelativeTo(null);
        jTable1.getTableHeader().setFont(new java.awt.Font("宋体", 0, 24));
        
        Date date = new Date();
        Calendar cal = Calendar.getInstance();
        cal.setTime(date);
        cal.add(Calendar.DATE, -7);
        String startStr = (new SimpleDateFormat("yyyy-MM-dd")).format(cal.getTime());
        if(startStr != null) {
            jTextField1.setText(startStr);
        }

        initTable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "日志信息", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 0, 18), new java.awt.Color(51, 51, 51))); // NOI18N
        jPanel3.setMinimumSize(new java.awt.Dimension(546, 100));
        jPanel3.setPreferredSize(new java.awt.Dimension(642, 100));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("宋体", 0, 24));
        jLabel1.setText("起始日期");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 52, 0, 0);
        jPanel3.add(jLabel1, gridBagConstraints);

        jTextField1.setFont(new java.awt.Font("宋体", 0, 24));
        jTextField1.setText("2012-5-6");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 120;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 21, 0, 0);
        jPanel3.add(jTextField1, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("宋体", 0, 24));
        jLabel3.setText("截止时期");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 43, 0, 0);
        jPanel3.add(jLabel3, gridBagConstraints);

        jTextField2.setFont(new java.awt.Font("宋体", 0, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 120;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 22, 0, 0);
        jPanel3.add(jTextField2, gridBagConstraints);

        jButton1.setFont(new java.awt.Font("宋体", 0, 24));
        jButton1.setText("查询");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 43, 8, 52);
        jPanel3.add(jButton1, gridBagConstraints);

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jTable1.setFont(new java.awt.Font("宋体", 0, 24));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "时间", "操作者", "患者ID", "患者姓名", "事件", "备注"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(40);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setMinWidth(60);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(280);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(320);
        jTable1.getColumnModel().getColumn(1).setMinWidth(40);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(200);
        jTable1.getColumnModel().getColumn(2).setMinWidth(30);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(60);
        jTable1.getColumnModel().getColumn(2).setMaxWidth(100);
        jTable1.getColumnModel().getColumn(3).setMinWidth(40);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(3).setMaxWidth(200);
        jTable1.getColumnModel().getColumn(4).setMinWidth(200);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(400);
        jTable1.getColumnModel().getColumn(4).setMaxWidth(800);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 960, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 980, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String startTime = jTextField1.getText();
        String endTime = jTextField2.getText();
        
        if(!CommonMethod.isDateStringValid(startTime) || !CommonMethod.isDateStringValid(endTime) ) {
            JOptionPane.showMessageDialog(this, "错误，请输入正确的日期及格式！");
            return; //Date input is invalid
        }
        
        logList = null;
        this.setCursor(Cursor.WAIT_CURSOR);
        try {
            logList = logSvc.findBySearchCriteria(null, startTime, endTime);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "本地数据库访问出错,请重试!");
            this.setCursor(Cursor.DEFAULT_CURSOR);
            return;
        }
        this.setCursor(Cursor.DEFAULT_CURSOR);
        
        DefaultTableModel tableModel = (DefaultTableModel) this.jTable1.getModel();
        tableModel.setRowCount(0);
        
        if(logList != null && !logList.isEmpty()) {
            fillParamTable(logList, tableModel);           
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        reportLog = null;
    }//GEN-LAST:event_formWindowClosing

    private void initTable() throws Throwable {
        //logList = ServiceLocator.getSystemLogService().findAll();
        String startTime = jTextField1.getText();
        String endTime = jTextField2.getText();
        
        logList = null;
        logList = logSvc.findBySearchCriteria(null, startTime, endTime);
        
        if(logList != null && !logList.isEmpty()) {
            DefaultTableModel tableModel = (DefaultTableModel) this.jTable1.getModel();
            fillParamTable(logList, tableModel);           
        }
    }

    private void fillParamTable(List<CatSystemLog> logList, DefaultTableModel tableModel) {
        for (int i = 0; i < logList.size(); i++) {
            CatSystemLog systemLog = logList.get(i);
            Date date = systemLog.getHappenTime();
            String operater = systemLog.getOperator(); 
            String patientName = null;
            if(systemLog.getPatientName() != null) {
                patientName = systemLog.getPatientName();
            }
            String patientID = null;
            if(systemLog.getPatientId() != null) {
                patientID = systemLog.getPatientId();
            }
            String logMessage = null;
            if(systemLog.getLogMessage() != null) {
                logMessage = systemLog.getLogMessage();
            }
            String logNote = null;
            if(systemLog.getNotes() != null) {
                logNote = systemLog.getNotes();
            }
             
            Object[] oneRow = new Object[6];
            oneRow[0] = date.toString();
            oneRow[1] = operater;
            oneRow[2] = patientName;
            oneRow[3] = patientID;
            oneRow[4] = logMessage;
            oneRow[5] = logNote;
            tableModel.addRow(oneRow);   
        }        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    new ReportLog().setVisible(true);
                } catch (Throwable ex) {
                    Logger.getLogger(ReportLog.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "本地数据库访问出错!");
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    private static SystemLogService  logSvc = ServiceLocator.getSystemLogService();
}
