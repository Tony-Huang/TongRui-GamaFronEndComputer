/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tongrui.shangweiji.ui.treatmentcontrol;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Shape;
import java.awt.geom.Ellipse2D;
import org.netbeans.lib.awtextra.AbsoluteConstraints;


public class SketchPanel extends javax.swing.JPanel {

    private double x=50;
    private double y=50;
    private double z=50;
    
    /**
     * Creates new form SketchPanel
     */
    public SketchPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setMaximumSize(new java.awt.Dimension(400, 400));
        setMinimumSize(new java.awt.Dimension(400, 400));
        setPreferredSize(new java.awt.Dimension(400, 400));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public void update_graph(double x,double y, double z){
        this.x=x;
        this.y=y;
        this.z=z;
       // this.removeAll();
        this.repaint();
    }
    
    public void paint (Graphics g) {
        setBackground(new java.awt.Color(255, 255, 255));
        super.paint(g); //draw background and clean

        g.setColor(Color.black);
        g.drawRect(0, 0, 399, 399);
        
  //      g.drawRect((int)x, (int)y, 10, 10);
        
        //Draw the coordinater
        g.setColor(Color.black);
        int l=10, r=390, t=10, b=390; //Left,Rith,Top,Bottom
        int cx=200, cy=200;  // Center-x and center-y
        g.drawLine(l,cy,r,cy);       //x
        g.drawLine(r,cy,r-10,cy-5);
        g.drawLine(r,cy,r-10,cy+5);
        g.drawString("x11", r-15, cy-10);
        g.drawLine(cx,t,cx,b);      //y
        g.drawLine(cx,t,cx-5,t+10);
        g.drawLine(cx,t,cx+5,t+10);
        g.drawString("y11", cx+10, t+10);
        g.drawLine(cx-141,cy+141,cx+141,cy-141); //z
        g.drawLine(cx-141,cy+141,cx-138,cy+131);
        g.drawLine(cx-141,cy+141,cx-131,cy+137);
        g.drawString("x2", cx-141+15,cy+141);
        
        //Display value of x, y, z
        g.drawString(Double.toString(x), r-25, cy+20);
        g.drawString(Double.toString(y), cx+10, t+25);
        g.drawString(Double.toString(z), cx-141+5,cy+141+15);
        
        //Get p0 to p7
        int zx = (int)(0.707*z);
        int zy = zx;
        int p0x = cx, p0y = cy;
        int p1x = cx, p1y = cy - (int)y;
        int p2x = cx + (int)x, p2y = cy - (int)y;
        int p3x = cx + (int)x, p3y = cy;
        int p4x = cx - zx + (int)x, p4y = cy + zy;
        int p5x = cx - zx, p5y = cy + zy;
        int p6x = cx - zx, p6y = cy -(int)y + zy;
        int p7x = cx - zx + (int)x, p7y = cy - (int)y + zy;
        
        //Draw p1, p3, p5
        g.drawArc(p1x-2, p1y-2, 4, 4, 0, 360);
        g.drawArc(p3x-2, p3y-2, 4, 4, 0, 360);
        g.drawArc(p5x-2, p5y-2, 4, 4, 0, 360);
        
        //Draw 3d lines
        g.drawLine(p1x, p1y, p2x, p2y);
        g.drawLine(p2x, p2y, p3x, p3y);
        g.drawLine(p3x, p3y, p4x, p4y);
        g.drawLine(p4x, p4y, p5x, p5y);
        g.drawLine(p5x, p5y, p6x, p6y);
        g.drawLine(p6x, p6y, p1x, p1y);
        g.setColor(Color.red);
        g.drawLine(p2x, p2y, p7x, p7y);
        g.drawLine(p4x, p4y, p7x, p7y);
        g.drawLine(p6x, p6y, p7x, p7y);
    }
    
    private void AlterCoordinatePoints(int centerX, int centerY) {
        this.x = x+centerX;
        this.y = y+centerY;
     }
}
