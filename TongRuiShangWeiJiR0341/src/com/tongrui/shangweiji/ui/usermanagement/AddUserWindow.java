/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tongrui.shangweiji.ui.usermanagement;

import com.tongrui.shangweiji.biz.RoleService;
import com.tongrui.shangweiji.biz.ServiceLocator;
import com.tongrui.shangweiji.biz.UserService;
import com.tongrui.shangweiji.data.CatAccRole;
import com.tongrui.shangweiji.data.CatAccUser;
import com.tongrui.shangweiji.ui.ErrorDialog;
import common.SystemInfo;
import java.awt.Cursor;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Administrator
 */
public class AddUserWindow extends JFrame {
    
    private static AddUserWindow addUser = null;
    
    public static AddUserWindow getInstance() {
        if(addUser == null) {
            addUser = new AddUserWindow();
        }
        return addUser;
    }

    /**
     * Creates new form AddUserWindow
     */
    public AddUserWindow() {
        initComponents();
        initTypeListModel();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        userNameLable = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        confirmPasswordLabel = new javax.swing.JLabel();
        userTypeLable = new javax.swing.JLabel();
        userNameFld = new javax.swing.JTextField();
        passwordFld = new javax.swing.JPasswordField();
        confirmPasswordFld = new javax.swing.JPasswordField();
        userTypeList = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        okBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        userNameLable.setFont(new java.awt.Font("宋体", 0, 24));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/tongrui/shangweiji/ui/usermanagement/Bundle"); // NOI18N
        userNameLable.setText(bundle.getString("AddUserWindow.userNameLable.text")); // NOI18N

        passwordLabel.setFont(new java.awt.Font("宋体", 0, 24));
        passwordLabel.setText(bundle.getString("AddUserWindow.passwordLabel.text")); // NOI18N

        confirmPasswordLabel.setFont(new java.awt.Font("宋体", 0, 24));
        confirmPasswordLabel.setText(bundle.getString("AddUserWindow.confirmPasswordLabel.text")); // NOI18N

        userTypeLable.setFont(new java.awt.Font("宋体", 0, 24));
        userTypeLable.setText(bundle.getString("AddUserWindow.userTypeLable.text")); // NOI18N

        userNameFld.setColumns(20);
        userNameFld.setFont(new java.awt.Font("宋体", 0, 24));
        userNameFld.setText(bundle.getString("AddUserWindow.userNameFld.text")); // NOI18N

        passwordFld.setColumns(20);
        passwordFld.setFont(new java.awt.Font("宋体", 0, 24));
        passwordFld.setText(bundle.getString("AddUserWindow.passwordFld.text")); // NOI18N

        confirmPasswordFld.setColumns(20);
        confirmPasswordFld.setFont(new java.awt.Font("宋体", 0, 24));
        confirmPasswordFld.setText(bundle.getString("AddUserWindow.confirmPasswordFld.text")); // NOI18N

        userTypeList.setFont(new java.awt.Font("宋体", 0, 24));
        userTypeList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userTypeLable)
                    .addComponent(confirmPasswordLabel)
                    .addComponent(passwordLabel)
                    .addComponent(userNameLable))
                .addGap(63, 63, 63)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userNameFld)
                    .addComponent(passwordFld)
                    .addComponent(confirmPasswordFld)
                    .addComponent(userTypeList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userNameLable)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(userNameFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordLabel))))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmPasswordLabel)
                    .addComponent(confirmPasswordFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userTypeLable)
                    .addComponent(userTypeList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        okBtn.setFont(new java.awt.Font("宋体", 0, 24));
        okBtn.setText(bundle.getString("AddUserWindow.okBtn.text")); // NOI18N
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });

        cancelBtn.setFont(new java.awt.Font("宋体", 0, 24));
        cancelBtn.setText(bundle.getString("AddUserWindow.cancelBtn.text")); // NOI18N
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(okBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(cancelBtn)
                .addGap(77, 77, 77))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 33, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okBtn)
                    .addComponent(cancelBtn)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 171, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(75, 75, 75))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed
        // TODO add your handling code here:
        String pwd = this.passwordFld.getText();
        String confirmPwd = this.confirmPasswordFld.getText();
        boolean checkPwd = this.checkPassword(pwd, confirmPwd);
        
        try {
            this.setCursor(Cursor.WAIT_CURSOR);
            String userName = this.userNameFld.getText();
            boolean checkName = this.checkUsername(userName);

            String selectedRole = (String) userTypeList.getSelectedItem();
            System.out.println(("SELECTED ROLE=") + selectedRole);
            if (checkName && checkPwd) {
                this.createUser(userName, pwd, selectedRole);
            }
        } catch (Throwable e) {
            JOptionPane.showMessageDialog(this, "本地数据库访问出错,请重试!");
        }
        this.setCursor(Cursor.DEFAULT_CURSOR);
    }//GEN-LAST:event_okBtnActionPerformed

    private boolean checkUsername(String inputUserName) throws Throwable{
        if(inputUserName==null ||inputUserName.equals("") ){
            ErrorDialog error = new ErrorDialog(this, true);
            error.getErrorText().setText("User name can not be empty!");
            error.setVisible(true);
            return false;
        } else if (inputUserName.length() < 6) {
            ErrorDialog error = new ErrorDialog(this, true);
            error.getErrorText().setText("User name must be logner than 6!");
            error.setVisible(true);
            return false;
        } else {
            //用户名起始只能为字母,后续为字母、数字、下划线或空格。
            Pattern p = Pattern.compile("[a-zA-Z][\\w ]+");
            Matcher m = p.matcher(inputUserName);
            if (!m.matches()) {
                ErrorDialog error = new ErrorDialog(this, true);
                error.getErrorText().setText("User name is illegal!");
                error.setVisible(true);
                return false;
            } else {
                UserService us = ServiceLocator.getUserService();
                Object user = us.findByName(inputUserName.trim());
                if (user != null) {
                    ErrorDialog error = new ErrorDialog(this, true);
                    error.getErrorText().setText("User already exist!");
                    error.setVisible(true);
                    return false;
                }
            }
        }
        return true;
     }
    
    private boolean checkPassword(String inputPwd,String inputConfirmPwd){
       if(inputPwd==null || inputConfirmPwd==null ||inputPwd.equals("") || inputConfirmPwd.equals("")){
            ErrorDialog error= new ErrorDialog(this,true);
            error.getErrorText().setText("Password can not be empty!");
            error.setVisible(true);
            return false;
        } 
       else if(!inputPwd.equals(inputConfirmPwd)){
            ErrorDialog error= new ErrorDialog(this,true);
            error.getErrorText().setText("Password and confirm password are different!");
            error.setVisible(true);
            return false;
       
       }
       else if(inputPwd.length()<6){
           ErrorDialog error= new ErrorDialog(this,true);
            error.getErrorText().setText("Password must be logner than 6!");
            error.setVisible(true);
            return false;
       }
       else {
           //密码由字母、数字、下划线组成。
           Pattern p = Pattern.compile("\\w+");
           Matcher m = p.matcher(inputPwd);
           if (!m.matches()) {
               ErrorDialog error = new ErrorDialog(this, true);
               error.getErrorText().setText("Password is illegal!");
               error.setVisible(true);
               return false;
           }
       }
       return true;
    }
    
    private void createUser(String userName,String password,String roleName)  throws Throwable{
      CatAccUser  user = new CatAccUser();
      user.setUserName(userName);user.setPassword(password);
      RoleService rs = ServiceLocator.getRoleService();
      CatAccRole role=rs.findByName(roleName);
      user.setCatAccRole(role);
      user.setActive((byte)1);
      UserService us = ServiceLocator.getUserService();
      us.save(user);
      
      UserView uv = UserView.getInstance();
      uv.add1row2UserListTable(userName, roleName, (byte)1);
      uv.setExtendedState(JFrame.NORMAL);
      this.dispose();
    }
    
    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
         // TODO add your handling code here:
        this.dispose();
        addUser = null;
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        addUser = null;
    }//GEN-LAST:event_formWindowClosing

     private void initTypeListModel(){
         String[] roleNames = null;
         if (SystemInfo.getCurrentUser() != null) { //wys.Only for debug
             String roleName = SystemInfo.getCurrentUser().getCatAccRole().getRoleName();
             if (roleName.equals("Engineer")) {
                 roleNames = new String[2];
                 roleNames[0] = "Manager";
                 roleNames[1] = "Operator";
             } else if (roleName.equals("Manager")) {
                 roleNames = new String[1];
                 roleNames[0] = "Operator";
             }
         }

//Debug
//        RoleService rs = ServiceLocator.getRoleService();
//        List<CatAccRole> roles=rs.findAll();
//        String[] roleNames = new String[roles.size()];
//        for(int i=0;i<roles.size();i++){
//          roleNames[i]=roles.get(i).getRoleName();
//        }
         
         DefaultComboBoxModel model = new DefaultComboBoxModel(roleNames);
         userTypeList.setModel(model);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddUserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddUserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddUserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddUserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                if (addUser == null) {
                    addUser = new AddUserWindow();
                }
                addUser.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JPasswordField confirmPasswordFld;
    private javax.swing.JLabel confirmPasswordLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton okBtn;
    private javax.swing.JPasswordField passwordFld;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextField userNameFld;
    private javax.swing.JLabel userNameLable;
    private javax.swing.JLabel userTypeLable;
    private javax.swing.JComboBox userTypeList;
    // End of variables declaration//GEN-END:variables

    public void setjPanel1(JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }
}
