/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tongrui.shangweiji.ui.usermanagement;

import com.tongrui.shangweiji.biz.RoleService;
import com.tongrui.shangweiji.biz.ServiceLocator;
import com.tongrui.shangweiji.data.CatAccRole;
import common.TreeUtil;
import java.awt.Color;
import java.util.List;
import java.util.ResourceBundle;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.tree.*;
import javax.swing.tree.DefaultTreeCellRenderer;
/**
 *
 * @author Administrator
 */
public class PrivilegeMgt extends javax.swing.JFrame {
    public static ResourceBundle resources = ResourceBundle.getBundle("resources_cn");
    
    

    /**
     * Creates new form PrivilegeMgt
     */
    public PrivilegeMgt() {
        initComponents();
        initTree();
        this.initRoles();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        okBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        leftTree = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        rightTree = new javax.swing.JTree();
        toRight = new javax.swing.JButton();
        toLeft = new javax.swing.JButton();
        selectableLabel = new javax.swing.JLabel();
        selectedLabel = new javax.swing.JLabel();
        roles = new javax.swing.JComboBox();

        okBtn.setFont(new java.awt.Font("宋体", 0, 18));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("resources_cn"); // NOI18N
        okBtn.setText(bundle.getString("btn.ok")); // NOI18N
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });

        cancelBtn.setFont(new java.awt.Font("宋体", 0, 18));
        cancelBtn.setText(bundle.getString("btn.cancel")); // NOI18N
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(okBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(cancelBtn)
                .addGap(41, 41, 41))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 9, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okBtn)
                    .addComponent(cancelBtn)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setViewportView(leftTree);

        jScrollPane2.setViewportView(rightTree);

        toRight.setFont(new java.awt.Font("宋体", 0, 18));
        java.util.ResourceBundle bundle1 = java.util.ResourceBundle.getBundle("com/tongrui/shangweiji/ui/usermanagement/Bundle"); // NOI18N
        toRight.setText(bundle1.getString("PrivilegeMgt.toRight.text")); // NOI18N
        toRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toRightActionPerformed(evt);
            }
        });

        toLeft.setFont(new java.awt.Font("宋体", 0, 18));
        toLeft.setText(bundle1.getString("PrivilegeMgt.toLeft.text")); // NOI18N
        toLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toLeftActionPerformed(evt);
            }
        });

        selectableLabel.setFont(new java.awt.Font("宋体", 0, 18));
        selectableLabel.setText(bundle1.getString("PrivilegeMgt.selectableLabel.text")); // NOI18N

        selectedLabel.setFont(new java.awt.Font("宋体", 0, 18));
        selectedLabel.setText(bundle1.getString("PrivilegeMgt.selectedLabel.text")); // NOI18N

        roles.setFont(new java.awt.Font("宋体", 0, 18));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(toRight)
                                    .addComponent(toLeft))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(selectableLabel)
                                .addGap(270, 270, 270)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectedLabel)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(roles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(roles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(toRight)
                        .addGap(18, 18, 18)
                        .addComponent(toLeft)
                        .addGap(0, 220, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(selectableLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(selectedLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(58, 58, 58))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_okBtnActionPerformed

    private void toRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toRightActionPerformed
        // TODO add your handling code here:
        System.out.println("--------------=--------------SHIFT to right:-------==-------------");
       
        TreePath selectionPath = leftTree.getSelectionPath();
        if(selectionPath==null) return;
         System.out.println("selection path="+selectionPath.toString());
        if(selectionPath.getPathCount()==1){
          rightModel.setRoot(leftRoot);
          return;
        }
       //======================
       DefaultTreeModel rightRootModel = (DefaultTreeModel) rightTree.getModel();
       TreeUtil.copyTreePath2TreeModel(selectionPath, rightRootModel);
       // TreeUtil.copyTreePath2Root(selectionPath, rightRoot);
       this.rightTree.updateUI();
    }//GEN-LAST:event_toRightActionPerformed

    
    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
     DefaultMutableTreeNode root=  (DefaultMutableTreeNode)leftTree.getModel().getRoot();
     DefaultTreeModel md =null; //md.
     //this.tranverseTreeNode(root);
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void toLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toLeftActionPerformed
        // TODO add your handling code here:
      TreePath path =  this.rightTree.getSelectionPath();
      System.out.println("right selectionPath ="+path);
      if(path == null)  return ;  
      if(path.getPathCount()==1){
          System.out.println("only right root selected,set to initial state.....");
          //rightRoot = null ; 
          //this.rightModel.setRoot(null);
          this.rightTree.setModel(new DefaultTreeModel(defaultRightRoot));
          this.rightTree.updateUI();
       return;
      }
      
      TreeUtil.deleteTreePathFromRoot(path);
      this.rightModel.setRoot(rightRoot);
      this.rightTree.setModel(rightModel);
    }//GEN-LAST:event_toLeftActionPerformed
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (resources.getString("NIMBUS").equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrivilegeMgt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrivilegeMgt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrivilegeMgt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrivilegeMgt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new PrivilegeMgt().setVisible(true);
            }
        });
    }
    
    private void initTree(){
        //left tree
        this.leftRoot = new DefaultMutableTreeNode(resources.getString("privilege.root"));
        //main.menu.usermgt
        DefaultMutableTreeNode usermgt = new DefaultMutableTreeNode(resources.getString("main.menu.usermgt"));
        DefaultMutableTreeNode userview = new DefaultMutableTreeNode(resources.getString("main.submenu.userview"));
        DefaultMutableTreeNode useredit = new DefaultMutableTreeNode(resources.getString("main.submenu.useredit"));
        DefaultMutableTreeNode privilegemgt = new DefaultMutableTreeNode(resources.getString("main.submenu.privilegemgt"));
        usermgt.add(userview);usermgt.add(useredit);usermgt.add(privilegemgt);
        //main.menu.patientPlan=患者浏览
        DefaultMutableTreeNode patientPlanmgt = new DefaultMutableTreeNode(resources.getString("main.menu.patientPlan"));
        //main.menu.treatmentControl=治疗控制
        DefaultMutableTreeNode treatmentControl = new DefaultMutableTreeNode(resources.getString("main.menu.treatmentControl"));
        //main.menu.paramSetting=参数设定;;//main.submenu.rcparam=换源参数;main.submenu.mechcompensation=机械补偿;main.submenu.positionspeed=位置和速度
        DefaultMutableTreeNode params = new DefaultMutableTreeNode(resources.getString("main.menu.paramSetting"));        
         DefaultMutableTreeNode csparam = new DefaultMutableTreeNode(resources.getString("main.submenu.rcparam"));
         DefaultMutableTreeNode mechaCompen = new DefaultMutableTreeNode(resources.getString("main.submenu.mechcompensation"));
         DefaultMutableTreeNode posNspeed = new DefaultMutableTreeNode(resources.getString("main.submenu.positionspeed"));
        params.add(csparam); params.add(mechaCompen); params.add(posNspeed); 
        //main.menu.systemAdjust=系统调试
        DefaultMutableTreeNode adjustment = new DefaultMutableTreeNode(resources.getString("main.menu.systemAdjust"));
        //main.menu.logWarning=报警日志
        DefaultMutableTreeNode logs = new DefaultMutableTreeNode(resources.getString("main.menu.logWarning"));
        //main.menu.help
        DefaultMutableTreeNode help = new DefaultMutableTreeNode(resources.getString("main.menu.help"));
        
        leftRoot.add(usermgt);
        leftRoot.add(patientPlanmgt);
        leftRoot.add(treatmentControl);
        leftRoot.add(params);
        leftRoot.add(adjustment);
        leftRoot.add(logs);
        leftRoot.add(help);
        
        this.leftModel = new DefaultTreeModel (leftRoot); 
        leftTree.setModel(leftModel);
        leftTree.setCellRenderer(new MyTreeCellRender());
        
        //right tree
        this.rightRoot = new DefaultMutableTreeNode(resources.getString("privilege.root"));
        this.defaultRightRoot = (DefaultMutableTreeNode)rightRoot.clone();
        this.rightModel  = new DefaultTreeModel (rightRoot); 
        rightTree.setModel(rightModel);
        
    }
    
    private void initRoles(){
     DefaultComboBoxModel roleModel= (DefaultComboBoxModel)this.roles.getModel();
     
     RoleService rs = ServiceLocator.getRoleService();
     List<CatAccRole>  roleList = rs.findAll();
     for(int i= 0; i < roleList.size(); i++){
        CatAccRole role = roleList.get(i);
     roleModel.addElement(role.getRoleName());
       // roleModel.;
       }
    }
    
    private DefaultTreeModel leftModel;
    private DefaultMutableTreeNode  leftRoot;
    private DefaultTreeModel rightModel;
    private DefaultMutableTreeNode  rightRoot;
    private DefaultMutableTreeNode  defaultRightRoot;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTree leftTree;
    private javax.swing.JButton okBtn;
    private javax.swing.JTree rightTree;
    private javax.swing.JComboBox roles;
    private javax.swing.JLabel selectableLabel;
    private javax.swing.JLabel selectedLabel;
    private javax.swing.JButton toLeft;
    private javax.swing.JButton toRight;
    // End of variables declaration//GEN-END:variables
}
